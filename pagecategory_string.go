// Code generated by "stringer -type=PageCategory,PageSubCategory,PageColor"; DO NOT EDIT.

package igdb

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PagePersonality-1]
	_ = x[PageMediaOrganization-2]
	_ = x[PageContentCreator-3]
	_ = x[PageClanTeam-4]
}

const _PageCategory_name = "PagePersonalityPageMediaOrganizationPageContentCreatorPageClanTeam"

var _PageCategory_index = [...]uint8{0, 15, 36, 54, 66}

func (i PageCategory) String() string {
	i -= 1
	if i < 0 || i >= PageCategory(len(_PageCategory_index)-1) {
		return "PageCategory(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PageCategory_name[_PageCategory_index[i]:_PageCategory_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PageUser-1]
	_ = x[PageGame-2]
	_ = x[PageCompany-3]
	_ = x[PageConsumer-4]
	_ = x[PageIndustry-5]
	_ = x[PageESports-6]
}

const _PageSubCategory_name = "PageUserPageGamePageCompanyPageConsumerPageIndustryPageESports"

var _PageSubCategory_index = [...]uint8{0, 8, 16, 27, 39, 51, 62}

func (i PageSubCategory) String() string {
	i -= 1
	if i < 0 || i >= PageSubCategory(len(_PageSubCategory_index)-1) {
		return "PageSubCategory(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PageSubCategory_name[_PageSubCategory_index[i]:_PageSubCategory_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PageGreen-0]
	_ = x[PageBlue-1]
	_ = x[PageRed-2]
	_ = x[PageOrange-3]
	_ = x[PagePink-4]
	_ = x[PageYellow-5]
}

const _PageColor_name = "PageGreenPageBluePageRedPageOrangePagePinkPageYellow"

var _PageColor_index = [...]uint8{0, 9, 17, 24, 34, 42, 52}

func (i PageColor) String() string {
	if i < 0 || i >= PageColor(len(_PageColor_index)-1) {
		return "PageColor(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PageColor_name[_PageColor_index[i]:_PageColor_index[i+1]]
}
